pipeline GTFSDataPipeline {

    // Define the pipeline structure 
    gtfsExtractor
        -> gtfsZipArchiveInterpreter
        -> gtfsStopsFilePicker
        -> gtfsTextFileInterpreter
        -> gtfsCSVInterpreter
        -> gtfsColDeleter
        -> gtfsTableInterpreter
        
        -> gtfsLoader;

    // Define the blocks used

    block gtfsZipArchiveInterpreter oftype ArchiveInterpreter {
        archiveType: "zip";
    }

    block gtfsTextFileInterpreter oftype TextFileInterpreter {
        encoding: "utf8";
    }

    block gtfsStopsFilePicker oftype FilePicker {
        path: "/stops.txt";
    }

    block gtfsExtractor oftype HttpExtractor {
        url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
    }

    block gtfsCSVInterpreter oftype CSVInterpreter {
        delimiter: ","; 
        enclosing: '"'; 
    }

    block gtfsColDeleter oftype ColumnDeleter {
        delete: [
            column A, column D, column H, column I, column J, column K, column L  
        ];
        }

    block gtfsTableInterpreter oftype TableInterpreter {
        header: false;
        columns: [
            "stop_id" oftype integer,
            "stop_name" oftype text,
            "stop_lat" oftype decimal,
            "stop_lon" oftype decimal,
            "zone_id" oftype ZoneValid
        ];
    }

    block gtfsLoader oftype SQLiteLoader {
        table: "stops";
        file: "./gtfs.sqlite";
    }

    

    
    // Define the value types used

    valuetype ZoneValid oftype integer {
        constraints: [IsZoneValid];
    }

   

    // Define the constraints used

    constraint IsZoneValid on integer :
        value==1645;


}
